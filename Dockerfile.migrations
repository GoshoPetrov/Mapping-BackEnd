# Use the official .NET SDK image to build the application
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS migrations
WORKDIR /src

# Copy the project file and restore any dependencies
COPY ./backend/Mapping-BackEnd/*.csproj ./
RUN dotnet restore

# Copy the rest of the application code
COPY ./backend/Mapping-BackEnd ./

# Install the Entity Framework Core tools
RUN dotnet tool install --global dotnet-ef
ENV PATH="${PATH}:/root/.dotnet/tools"

# Set environment variables
ENV ACCEPT_EULA=Y \
    DEBIAN_FRONTEND=noninteractive

# Update the package list and install prerequisites
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        apt-transport-https \
        software-properties-common \
        gnupg2 && \
    curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    curl https://packages.microsoft.com/config/debian/10/prod.list -o /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends mssql-tools && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Add the SQL tools to the PATH
ENV PATH="$PATH:/opt/mssql-tools/bin"

# Copy the migration script
COPY apply-migrations.sh /app/apply-migrations.sh
RUN chmod +x /app/apply-migrations.sh

# Copy the init.sql script
COPY ./backend/Mapping-BackEnd/Data/Init.sql /app/init.sql

# Set the entry point to the migration script
ENTRYPOINT ["/app/apply-migrations.sh"]